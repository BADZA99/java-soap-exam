<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.exam</groupId>
        <artifactId>maven-soap-exam</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>webservices</artifactId>
    <packaging>war</packaging>
    <name>webservices Maven Webapp</name>
    <url>http://maven.apache.org</url>
    <dependencies>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>5.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.jws</groupId>
            <artifactId>jakarta.jws-api</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
            <version>4.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-tools</artifactId>
            <version>4.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>servlet</artifactId>
            <version>4.0.0</version>
        </dependency>

        <!-- Remplacer javax.xml.bind par jakarta.xml.bind -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>4.0.0</version>
            <scope>runtime</scope>
        </dependency>

        <!-- pour utiliser que le module metier dans webservices !-->
        <dependency>
            <groupId>com.exam</groupId>
            <artifactId>metier</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>
    <!-- pour nommer le fichier jar du module webservices genere apres clean install du projet principale en metier pas en metier-1.0-SNAPSHOT.jar -->
     
 
    
    <build>
        <finalName>webservices</finalName>
        <!-- <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>wsgen</goal>
                        </goals>
                        <configuration>
                            <sei>com.groupeisi.webservice.service.ClasseWebServiceImpl</sei>
                            <destDir>${project.build.directory}/generated-sources/wsdl</destDir>
                            <sourceDestDir>${project.build.directory}/generated-sources/wsdl</sourceDestDir>
                            <verbose>true</verbose>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins> -->
    </build>

    <!-- Ce plugin jaxws-maven-plugin est utilisé pour générer automatiquement le fichier WSDL et les artefacts associés à partir de la classe annotée @WebService. 
    Il utilise l'outil wsgen pour analyser la classe spécifiée dans le paramètre 'sei' (Service Endpoint Interface) et produit les fichiers nécessaires dans le répertoire spécifié par 'destDir'.
    - 'sei' : Spécifie la classe annotée @WebService pour laquelle le WSDL sera généré.
    - 'destDir' : Répertoire où le fichier WSDL sera généré.
    - 'sourceDestDir' : Répertoire où les fichiers sources générés seront placés.
    - 'verbose' : Active les logs détaillés pour fournir des informations sur le processus de génération. -->

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
</project>
